<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Post-rsses on Guowei Lv</title>
    <link>http://lvguowei.me/post/index.xml</link>
    <description>Recent content in Post-rsses on Guowei Lv</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 05 Dec 2016 18:50:50 +0200</lastBuildDate>
    <atom:link href="http://lvguowei.me/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Moomin</title>
      <link>http://lvguowei.me/post/painting-mumin/</link>
      <pubDate>Mon, 05 Dec 2016 18:50:50 +0200</pubDate>
      
      <guid>http://lvguowei.me/post/painting-mumin/</guid>
      <description>&lt;p&gt;Moomin ~&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://lvguowei.me/img/moomi.png&#34; /&gt;
    
    
&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>Xpp</title>
      <link>http://lvguowei.me/post/painting-xpp/</link>
      <pubDate>Mon, 05 Dec 2016 18:40:50 +0200</pubDate>
      
      <guid>http://lvguowei.me/post/painting-xpp/</guid>
      <description>&lt;p&gt;My wife ~&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://lvguowei.me/img/xpp.jpg&#34; /&gt;
    
    
&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>Ayumi Hamasaki Portrait</title>
      <link>http://lvguowei.me/post/painting-ayumi/</link>
      <pubDate>Mon, 05 Dec 2016 18:30:50 +0200</pubDate>
      
      <guid>http://lvguowei.me/post/painting-ayumi/</guid>
      <description>&lt;p&gt;Ayumi Hamasaki, painted by Krita ~&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://lvguowei.me/img/ayumi.png&#34; /&gt;
    
    
&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>Master Mind in TDD</title>
      <link>http://lvguowei.me/post/master-mind-TDD/</link>
      <pubDate>Mon, 21 Nov 2016 21:29:52 +0200</pubDate>
      
      <guid>http://lvguowei.me/post/master-mind-TDD/</guid>
      <description>&lt;p&gt;In one of Uncle Bob&amp;rsquo;s video, he talked about this game called &amp;ldquo;Master Mind&amp;rdquo; when he was teaching Single Responsibility Principle(SRP).
After googled the game, turns out that it is actually a quite famous board game. For more information about the game, please look here -&amp;gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/Mastermind_(board_game)&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The game can be played by two people. One comes up with a code, the other one tries to guess. The one who comes up with the code has to score the guesser&amp;rsquo;s guess based on some rules.
The rules are the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;For each exact match(the right char on the right position), give a &lt;code&gt;+&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;For each half match(the right char on the wrong position), give a &lt;code&gt;-&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For example, if the code is &lt;code&gt;ACBB&lt;/code&gt; and the guess is &lt;code&gt;BCAF&lt;/code&gt;, then the score would be &lt;code&gt;+--&lt;/code&gt;. The &lt;code&gt;+&lt;/code&gt; is for the &lt;code&gt;C&lt;/code&gt;, and two &lt;code&gt;-&lt;/code&gt; are for &lt;code&gt;B&lt;/code&gt; and &lt;code&gt;A&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;After explaining how to play this game, Uncle Bob gives a architecture that looks like this.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://lvguowei.me/img/master-mind-1.jpg&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;This design shows that there are 3 &lt;strong&gt;actors&lt;/strong&gt; in this program: &lt;strong&gt;Customer&lt;/strong&gt;, &lt;strong&gt;Game Designer&lt;/strong&gt; and &lt;strong&gt;Strategist&lt;/strong&gt;. According to the Single Responsibility Principle, there will be one module for each actor. And the &lt;em&gt;Game Interface&lt;/em&gt; module and &lt;em&gt;Strategy&lt;/em&gt; module are dependent on &lt;em&gt;Game Play&lt;/em&gt; module.&lt;/p&gt;

&lt;p&gt;Here shows a more detailed design.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://lvguowei.me/img/master-mind-2.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;Let&amp;rsquo;s use these as a reference and create some empty classes and interfaces.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/lvguowei/MasterMindTDD/commit/50bd61a8f9a7a4eb3d9fe63d1f2dc8da46c532a4&#34;&gt;source code version 0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Since the center of the program is the game engine, let&amp;rsquo;s implement enough &lt;code&gt;GameEngine&lt;/code&gt; so that we can pass the test &lt;code&gt;gotItOnFirstGuess&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/lvguowei/MasterMindTDD/commit/d72116eb3c870484c138e211cd7d0d0f6cee6d3f&#34;&gt;source code version 1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And it&amp;rsquo;s not very hard to pass the test of &lt;code&gt;gotItOnSecondGuess&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/lvguowei/MasterMindTDD/commit/82fca579aab74908c16cd578499351e2d281cc7f&#34;&gt;source code version 2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then the test of &lt;code&gt;neverGetIt&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/lvguowei/MasterMindTDD/commit/89a50b4965f83fcaf1132096d3164344695234c4&#34;&gt;source code version 3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, let&amp;rsquo;s write tests for the &lt;code&gt;Guesser&lt;/code&gt;.
If all the guesses are invalid, the &lt;code&gt;nextGuess&lt;/code&gt; should return null.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/lvguowei/MasterMindTDD/commit/bebf02418fe686953f09c1bf650284106e579871&#34;&gt;source code version 4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If there is only one guess is valid, &lt;code&gt;nextGuess&lt;/code&gt; should return that one and no more.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/lvguowei/MasterMindTDD/commit/8d0f621ad9acfa0bd05dab2fabd3b03d25a7ed2b&#34;&gt;source code version 5&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, test how the &lt;code&gt;Guesser&lt;/code&gt; generate guesses.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/lvguowei/MasterMindTDD/commit/f8f7ce8a6e76be745ca135f0e5e087498e561fe6&#34;&gt;source code version 6&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tests for the &lt;code&gt;Scorer&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/lvguowei/MasterMindTDD/commit/4ef948e41c6d8e996435c72cd4aa3e795138cc77&#34;&gt;source code version 7&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, tests for &lt;code&gt;RememberingGuessChecker&lt;/code&gt;.
&lt;a href=&#34;https://github.com/lvguowei/MasterMindTDD/commit/5e52719cb3324b0a10371dd52dfa522433a04780&#34;&gt;source code version 8&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Payroll Case Study</title>
      <link>http://lvguowei.me/post/payroll-case-study/</link>
      <pubDate>Sun, 20 Nov 2016 14:51:39 +0200</pubDate>
      
      <guid>http://lvguowei.me/post/payroll-case-study/</guid>
      <description>&lt;p&gt;I was watching some Uncle Bob video some day which talked about how to design the architecture of a system. In that video, he gave a case study of a payroll system, I found the souce code and it is actually implemented in C++, so I ported a Java version.&lt;/p&gt;

&lt;p&gt;This is a very good example because it feels more realistic than most dummy demos out there. It also shows how to use POJO classes to layout the foundation without going too much into peripheral details like database.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/lvguowei/Payroll&#34;&gt;Souce Code in Github&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Finnish learning diary 10</title>
      <link>http://lvguowei.me/post/Finnish-learning-diary-10/</link>
      <pubDate>Sun, 16 Oct 2016 14:11:16 +0300</pubDate>
      
      <guid>http://lvguowei.me/post/Finnish-learning-diary-10/</guid>
      <description>
&lt;figure &gt;
    
        &lt;img src=&#34;http://lvguowei.me/img/finnishpod-s1-17.jpg&#34; /&gt;
    
    
&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>Finnish learning diary 9</title>
      <link>http://lvguowei.me/post/Finnish-learning-diary-9/</link>
      <pubDate>Sun, 16 Oct 2016 09:34:04 +0300</pubDate>
      
      <guid>http://lvguowei.me/post/Finnish-learning-diary-9/</guid>
      <description>
&lt;figure &gt;
    
        &lt;img src=&#34;http://lvguowei.me/img/finnishpod-s1-18.jpg&#34; /&gt;
    
    
&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>Replace Nested Conditional With Guard Clauses</title>
      <link>http://lvguowei.me/post/replace-nested-conditional-with-guard-clauses/</link>
      <pubDate>Sat, 15 Oct 2016 19:38:57 +0300</pubDate>
      
      <guid>http://lvguowei.me/post/replace-nested-conditional-with-guard-clauses/</guid>
      <description>&lt;p&gt;I couldn&amp;rsquo;t remember who said that one of his favorite refactoring techniques is &lt;em&gt;Replace Nested Conditional with Guard Clauses&lt;/em&gt;. When I looked into it, it did put a smile on my face despite its simplicity.&lt;/p&gt;

&lt;p&gt;This is NOT about coding aesthetics, this is all about clarity.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A method has conditional behavior that does not make clear
the normal path of execution.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Use guard clauses for all the special cases.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getPayAmount&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isDead&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deadAmount&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isSeparated&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;separatedAmount&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isRetired&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;retiredAmount&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;normalPayment&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getPayAmount&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isDead&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deadAmount&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isSeparated&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;separatedAmount&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt; 
  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isRetired&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;retiredAmount&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  
  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;normalPayment&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;So much better!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Unidirectional to Bidirectional</title>
      <link>http://lvguowei.me/post/unidirectional-to-bidirectional/</link>
      <pubDate>Sat, 15 Oct 2016 09:40:46 +0300</pubDate>
      
      <guid>http://lvguowei.me/post/unidirectional-to-bidirectional/</guid>
      <description>&lt;p&gt;It is very common in relational database that we have the following structure:
A customer table has columns: customer-id, name.
And an order table has columns: order-id, customer-id, order-date.&lt;/p&gt;

&lt;p&gt;See that there is a customer-id in the order table, so that we can use it to get orders belongs to
a certain customer. But there is no knowledge about the orders in customer table.&lt;/p&gt;

&lt;p&gt;This is fine with database, but if we try to map this directly to java classes, we may end up with something like this:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Customer&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  
  &lt;span class=&#34;c1&#34;&gt;// ...&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Order&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Customer&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;customer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;createdAt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  
  &lt;span class=&#34;c1&#34;&gt;// ...&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;But what if we want to get all orders of a customer? It would be very convinient if there is a
orders field in the customer, isn&amp;rsquo;t it?&lt;/p&gt;

&lt;p&gt;Well, this is all this refactoring all about.&lt;/p&gt;

&lt;p&gt;But pay attention how to keep the data synced.&lt;/p&gt;

&lt;p&gt;Here is the code:
&lt;a href=&#34;https://github.com/lvguowei/refactoring/tree/master/unidirectionalToBidirectional&#34; title=&#34;Github&#34;&gt;Sample Project&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Duplicate Observed Data</title>
      <link>http://lvguowei.me/post/duplicate-observed-data/</link>
      <pubDate>Sat, 15 Oct 2016 05:35:31 +0300</pubDate>
      
      <guid>http://lvguowei.me/post/duplicate-observed-data/</guid>
      <description>&lt;p&gt;This is from the famous Refactoring book by Martin Fowler. When I was reading it, it feels very similar to the very popular MVP or MVVM.&lt;/p&gt;

&lt;p&gt;The key idea is that in system that has user interface, the business logic should be separated from the user interface.&lt;/p&gt;

&lt;p&gt;One example I can think of is the registration form, where there are input fields like username, email, phone number and password.
We can have some logic that disable the Register button until all fields are filled and the phone number and email valid.
We can of course put everything in the UI (probably an Activity or Fragment in Android), but it doesn&amp;rsquo;t feel very elegant.
So we create a new RegisterModel class, create 4 private String fields - username, email, phone number and password.
Then we create getter and setter for these fields. When in the Activity the user changed one of the fields, we directly call the
corresponding setter function in the model, and the model can do the calculation and validation and whatnot, then use some PubSub
mechanism to notify the view.&lt;/p&gt;

&lt;p&gt;I created an Android project out of the example in the book.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/lvguowei/refactoring/tree/master/DuplicateObservedData&#34; title=&#34;Github&#34;&gt;Android Example&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Choco Musk by Al Rehab</title>
      <link>http://lvguowei.me/post/choco-musk-review/</link>
      <pubDate>Sun, 09 Oct 2016 21:23:38 +0300</pubDate>
      
      <guid>http://lvguowei.me/post/choco-musk-review/</guid>
      <description>
&lt;figure &gt;
    
        &lt;img src=&#34;http://lvguowei.me/img/choco-musk.jpg&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;This is my first perfume oil/attar, I have to say I am quite impressed by it.&lt;/p&gt;

&lt;p&gt;I adore oriental culture. I prefer sophiscation over simplicity.&lt;/p&gt;

&lt;p&gt;I like dark, dense, rich scent, which shows marks of history. And I am very bored with the
western happy and fresh mall scents, yet not satisfied by the so call &amp;ldquo;oriental accord&amp;rdquo; interpreted by western perfumery.
So I went online and searched &amp;ldquo;middle east perfume&amp;rdquo;, and what I found truely suprised me. They are so cheap! I mean extremely cheap,
comparing to the price tags we are used to in the western world.&lt;/p&gt;

&lt;p&gt;So I randomly picked a popular one, which is this choco musk by al rehab. Upon opening the bottle I know this is not bad.
It is a smell that is unique, something makes you remember it.&lt;/p&gt;

&lt;p&gt;First of all, it is a gourmand. No question about that. Chocolate, milk, caramel, vanilla, you name it.
But that is not all, there is also this spice mixed in it. Some will say it smells a bit plastic, well I know saffron can sometimes do that to your nose,
so I suspect it is saffron but I am not sure.&lt;/p&gt;

&lt;p&gt;It becomes darker with time, which is exactly what I like about it. There is also an earthy dry smell in the dry down, which I guess might be pachouli,
cause I experienced the same in the dry down in Angle Men by Theirry Mugler, which is a similar kind of chocolaty scent.&lt;/p&gt;

&lt;p&gt;It smells distinctly arabic, I still don&amp;rsquo;t know what causes that, but you know it comes from the east.&lt;/p&gt;

&lt;p&gt;In one sentence, it smells like dark chocolate cookie with a bit of oriental spice and a drop of milk.&lt;/p&gt;

&lt;p&gt;I got a 6 x 6ml box, which will probably last me a life time.&lt;/p&gt;

&lt;p&gt;Projection and longevity are decent, not beast mode though, which is a good thing for me. Just one or two dabs will last you a whole day.&lt;/p&gt;

&lt;p&gt;This perfume oil makes me question the western perfumery industry, I have 60 - 70 euro big brand bottles, Chanel, Dior, Hermes. But how much
is spent on the commercial ads, models, campaigns, I don&amp;rsquo;t know. But I found the middle east perfumery more honest and humble.
They do it like commodity not luxury, which I respect a lot.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Finnish learning diary 8</title>
      <link>http://lvguowei.me/post/Finnish-learning-diary-8/</link>
      <pubDate>Sun, 09 Oct 2016 20:55:47 +0300</pubDate>
      
      <guid>http://lvguowei.me/post/Finnish-learning-diary-8/</guid>
      <description>
&lt;figure &gt;
    
        &lt;img src=&#34;http://lvguowei.me/img/finnishpod-s1-19b.jpg&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://lvguowei.me/img/finnishpod-s1-19.jpg&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Finnish learning diary 7</title>
      <link>http://lvguowei.me/post/Finnish-learning-diary-7/</link>
      <pubDate>Sat, 08 Oct 2016 20:10:44 +0300</pubDate>
      
      <guid>http://lvguowei.me/post/Finnish-learning-diary-7/</guid>
      <description>
&lt;figure &gt;
    
        &lt;img src=&#34;http://lvguowei.me/img/finnishpod-s1-20.jpg&#34; /&gt;
    
    
&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>Finnish learning diary 6</title>
      <link>http://lvguowei.me/post/Finnish-learning-diary-6/</link>
      <pubDate>Sat, 08 Oct 2016 20:09:44 +0300</pubDate>
      
      <guid>http://lvguowei.me/post/Finnish-learning-diary-6/</guid>
      <description>&lt;p&gt;I am into improving my handwriting recently and have been practicing on cursive style quite a bit.&lt;/p&gt;

&lt;p&gt;So I think maybe I can combine it with Finnish learning.&lt;/p&gt;

&lt;p&gt;Now instead typing I write things down by hand.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://lvguowei.me/img/finnishpod-s1-21.jpg&#34; /&gt;
    
    
&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>Do you have a good taste of what you are doing?</title>
      <link>http://lvguowei.me/post/good-taste/</link>
      <pubDate>Sat, 08 Oct 2016 14:17:40 +0300</pubDate>
      
      <guid>http://lvguowei.me/post/good-taste/</guid>
      <description>&lt;p&gt;There is this stereotype impression about technology industry, that it is a cruel game only
for energetic and ambitious young men, when you get old, you will be kicked out mercilessly.&lt;/p&gt;

&lt;p&gt;This doesn&amp;rsquo;t bother me so much since I was still young a few years ago, but since now I am getting older it
starts to act as a background noise that grabbed me more and more attention.&lt;/p&gt;

&lt;p&gt;Is this the truth? Do I have to quit at , say 35 years old or move to some kind of manager?&lt;/p&gt;

&lt;p&gt;I guess the anwser to this question really depends on what type of person you find yourself really are during all the
years of experience.&lt;/p&gt;

&lt;p&gt;Some people starts as a tech professional, and over 5 years of doing developing work, finds out that he hates it.
But then since he now has that 5 years of experience anyway, the best for him would be to move to management, well, probably.&lt;/p&gt;

&lt;p&gt;So there is nothing wrong for developers to move to management positions, as long as they are happy with it.&lt;/p&gt;

&lt;p&gt;But what about the developers that know by heart that they don&amp;rsquo;t want to manage other people or the business? Is tech a deadend in the end?&lt;/p&gt;

&lt;p&gt;Well, maybe let&amp;rsquo;s think of it in another angle. What makes you more valuable over the years of experience?&lt;/p&gt;

&lt;p&gt;Is it that the new framework just comes out?
No, since you&amp;rsquo;ve probabaly never heard of it.&lt;/p&gt;

&lt;p&gt;Is it your coding velocity?
No, you are not a typist for god&amp;rsquo;s sake.&lt;/p&gt;

&lt;p&gt;Well, you may say it must be all the experience, right?&lt;/p&gt;

&lt;p&gt;But what is so special about the experience? what is the essence of it?&lt;/p&gt;

&lt;p&gt;I think it&amp;rsquo;s all about good taste.&lt;/p&gt;

&lt;p&gt;When you see more, experience more, do more, you gradually acquire a good taste.
You can tell good things from bad ones. You can sense what we should do next.
You can predict the failure we are running into.&lt;/p&gt;

&lt;p&gt;Now thinking of it, it is actually true in other industries as well. It is all about good taste. It is even more important than the skills you have.
(You have to have skills in the first place to get a good taste anyway)&lt;/p&gt;

&lt;p&gt;But what tastes good can change over time, so we just keep ajusting our taste, that is also important to keep in mind.
What look sleek and cool 20 years ago may be totally irrelavent nowadays!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>